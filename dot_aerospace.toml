# Place a copy of this config to ~/.aerospace.toml
# After that, you can edit ~/.aerospace.toml to your liking

# You can use it to add commands that run after login to macOS user session.
# 'start-at-login' needs to be 'true' for 'after-login-command' to work
# Available commands: https://nikitabobko.github.io/AeroSpace/commands
after-login-command = []

# You can use it to add commands that run after AeroSpace startup.
# 'after-startup-command' is run after 'after-login-command'
# Available commands : https://nikitabobko.github.io/AeroSpace/commands
after-startup-command = [
  'exec-and-forget borders active_color="glow(0xff00ffcf)" inactive_color=0x00ffffff width=4.0'
]

# Start AeroSpace at login
start-at-login = false

# Normalizations. See: https://nikitabobko.github.io/AeroSpace/guide#normalization
enable-normalization-flatten-containers = true
enable-normalization-opposite-orientation-for-nested-containers = true

# See: https://nikitabobko.github.io/AeroSpace/guide#layouts
# The 'accordion-padding' specifies the size of accordion padding
# You can set 0 to disable the padding feature
accordion-padding = 20

# Possible values: tiles|accordion
default-root-container-layout = 'tiles'

# Possible values: horizontal|vertical|auto
# 'auto' means: wide monitor (anything wider than high) gets horizontal orientation,
#               tall monitor (anything higher than wide) gets vertical orientation
default-root-container-orientation = 'auto'

# Mouse follows focus when focused monitor changes
# Drop it from your config, if you don't like this behavior
# See https://nikitabobko.github.io/AeroSpace/guide#on-focus-changed-callbacks
# See https://nikitabobko.github.io/AeroSpace/commands#move-mouse
# Fallback value (if you omit the key): on-focused-monitor-changed = []
on-focused-monitor-changed = ['move-mouse monitor-lazy-center']

# You can effectively turn off macOS "Hide application" (cmd-h) feature by toggling this flag
# Useful if you don't use this macOS feature, but accidentally hit cmd-h or cmd-alt-h key
# Also see: https://nikitabobko.github.io/AeroSpace/goodies#disable-hide-app
automatically-unhide-macos-hidden-apps = true

# Possible values: (qwerty|dvorak)
# See https://nikitabobko.github.io/AeroSpace/guide#key-mapping
[key-mapping]
    preset = 'qwerty'

# [key-mapping.key-notation-to-key-code]
#     q = 'q'
#     w = 'w'
#     f = 'e'
#     p = 'r'
#     g = 't'
#     j = 'y'
#     l = 'u'
#     u = 'i'
#     y = 'o'
#     semicolon = 'p'
#     leftSquareBracket = 'leftSquareBracket'
#     rightSquareBracket = 'rightSquareBracket'
#     backslash = 'backslash'

#     a = 'a'
#     r = 's'
#     s = 'd'
#     t = 'f'
#     d = 'g'
#     h = 'h'
#     n = 'j'
#     e = 'k'
#     i = 'l'
#     o = 'semicolon'
#     quote = 'quote'

#     z = 'z'
#     x = 'x'
#     c = 'c'
#     v = 'v'
#     b = 'b'
#     k = 'n'
#     m = 'm'
#     comma = 'comma'
#     period = 'period'
#     slash = 'slash'

# Gaps between windows (inner-*) and between monitor edges (outer-*).
# Possible values:
# - Constant:     gaps.outer.top = 8
# - Per monitor:  gaps.outer.top = [{ monitor.main = 16 }, { monitor."some-pattern" = 32 }, 24]
#                 In this example, 24 is a default value when there is no match.
#                 Monitor pattern is the same as for 'workspace-to-monitor-force-assignment'.
#                 See:
#                 https://nikitabobko.github.io/AeroSpace/guide#assign-workspaces-to-monitors
[gaps]
    inner.horizontal = 4
    inner.vertical =   2
    outer.left =       2
    outer.bottom =     2
    outer.top =        2
    outer.right =      2

# 'main' binding mode declaration
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
# 'main' binding mode must be always presented
# Fallback value (if you omit the key): mode.main.binding = {}
[mode.main.binding]

    # All possible keys:
    # - Letters.        a, b, c, ..., z
    # - Numbers.        0, 1, 2, ..., 9
    # - Keypad numbers. keypad0, keypad1, keypad2, ..., keypad9
    # - F-keys.         f1, f2, ..., f20
    # - Special keys.   minus, equal, period, comma, slash, backslash, quote, semicolon,
    #                   backtick, leftSquareBracket, rightSquareBracket, space, enter, esc,
    #                   backspace, tab
    # - Keypad special. keypadClear, keypadDecimalMark, keypadDivide, keypadEnter, keypadEqual,
    #                   keypadMinus, keypadMultiply, keypadPlus
    # - Arrows.         left, down, up, right

    # All possible modifiers: cmd, alt, ctrl, shift

    # All possible commands: https://nikitabobko.github.io/AeroSpace/commands

    # See: https://nikitabobko.github.io/AeroSpace/commands#exec-and-forget
    # You can uncomment the following lines to open up terminal with alt + enter shortcut
    # (like in i3)
    # alt-enter = '''exec-and-forget osascript -e '
    # tell application "Terminal"
    #     do script
    # end tell'
    # '''
    #     activate

    # ---- Moonlander ----
    # TODO: Is this needed?
    
    # ---- Mac Keyboard ----
    # See: https://nikitabobko.github.io/AeroSpace/commands#layout
    alt-slash = 'layout tiles vertical horizontal'
    alt-comma = 'layout accordion vertical horizontal'

    # See: https://nikitabobko.github.io/AeroSpace/commands#focus
    ctrl-left = 'focus left'
    ctrl-down = 'focus down'
    ctrl-up = 'focus up'
    ctrl-right = 'focus right'

    ctrl-shift-1 = 'focus --dfs-index 0'
    ctrl-shift-2 = 'focus --dfs-index 1'
    ctrl-shift-3 = 'focus --dfs-index 2'
    ctrl-shift-4 = 'focus --dfs-index 3'
    ctrl-shift-5 = 'focus --dfs-index 4'
    ctrl-shift-6 = 'focus --dfs-index 0'
    ctrl-shift-7 = 'focus --dfs-index 1'
    ctrl-shift-8 = 'focus --dfs-index 2'
    ctrl-shift-9 = 'focus --dfs-index 3'
    ctrl-shift-0 = 'focus --dfs-index 4'

    # See: https://nikitabobko.github.io/AeroSpace/commands#move
    alt-ctrl-left = 'move left'
    alt-ctrl-down = 'move down'
    alt-ctrl-up = 'move up'
    alt-ctrl-right = 'move right'

    # See: https://nikitabobko.github.io/AeroSpace/commands#resize
    ctrl-shift-minus = 'resize smart -50'
    ctrl-shift-equal = 'resize smart +50'

    # See: https://nikitabobko.github.io/AeroSpace/commands#workspace
    alt-1 = 'workspace 1'
    alt-2 = 'workspace 2'
    alt-3 = 'workspace 3'
    alt-4 = 'workspace 4'
    alt-5 = 'workspace 5'
    alt-6 = 'workspace 6'
    alt-7 = 'workspace 7'
    alt-8 = 'workspace 8'
    alt-9 = 'workspace 9'
    alt-0 = 'workspace 10'

    # See: https://nikitabobko.github.io/AeroSpace/commands#move-node-to-workspace
    alt-shift-1 = 'move-node-to-workspace 1'
    alt-shift-2 = 'move-node-to-workspace 2'
    alt-shift-3 = 'move-node-to-workspace 3'
    alt-shift-4 = 'move-node-to-workspace 4'
    alt-shift-5 = 'move-node-to-workspace 5'
    alt-shift-6 = 'move-node-to-workspace 6'
    alt-shift-7 = 'move-node-to-workspace 7'
    alt-shift-8 = 'move-node-to-workspace 8'
    alt-shift-9 = 'move-node-to-workspace 9'
    alt-shift-0 = 'move-node-to-workspace 10'

    # See: https://nikitabobko.github.io/AeroSpace/commands#workspace-back-and-forth
    alt-tab = 'workspace-back-and-forth'
    # See: https://nikitabobko.github.io/AeroSpace/commands#move-workspace-to-monitor
    alt-shift-tab = 'move-workspace-to-monitor --wrap-around next'

    # See: https://nikitabobko.github.io/AeroSpace/commands#mode
    alt-shift-semicolon = 'mode service'

# 'service' binding mode declaration.
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
[mode.service.binding]
    esc = ['reload-config', 'mode main']
    r = ['flatten-workspace-tree', 'mode main'] # reset layout
    f = ['layout floating tiling', 'mode main'] # Toggle between floating and tiling layout
    backspace = ['close-all-windows-but-current', 'mode main']

    # sticky is not yet supported https://github.com/nikitabobko/AeroSpace/issues/2
    #s = ['layout sticky tiling', 'mode main']

    alt-shift-h = ['join-with left', 'mode main']
    alt-shift-j = ['join-with down', 'mode main']
    alt-shift-k = ['join-with up', 'mode main']
    alt-shift-l = ['join-with right', 'mode main']

    down = 'volume down'
    up = 'volume up'
    shift-down = ['volume set 0', 'mode main']




# --------------------------------------------
#     Workspaces legend
# 
# 1 - Browsers
# 2 - Code
# 3 - Files and terminals
# 4 - Messengers work
# 5 - Personal/Messengers
# 6 - Office and Agile
# --------------------------------------------


# Workspace => Monitor
# See https://nikitabobko.github.io/AeroSpace/guide#assign-workspaces-to-monitors
[workspace-to-monitor-force-assignment]
    # Replace main with monitor id @ home
    1 = ['main', 'built-in']
    2 = ['main', 'built-in']
    3 = ['main', 'built-in']    
    4 = ['secondary', 'built-in']
    5 = ['secondary', 'built-in']
    6 = ['secondary', 'built-in']
    7 = ['secondary', 'built-in']
    8 = ['secondary', 'built-in']
    9 = ['secondary', 'built-in']
    10 = ['main', 'built-in']


# Workspace 1 - Browsers
# Chrome
[[on-window-detected]]
if.app-id = 'com.google.Chrome'
run = 'move-node-to-workspace 1'
# Edge
[[on-window-detected]]
if.app-id = 'com.microsoft.edgemac'
run = 'move-node-to-workspace 1'
# Arc
[[on-window-detected]]
if.app-id = 'company.thebrowser.Browser'
run = 'move-node-to-workspace 1'
# Vivaldi
[[on-window-detected]]
if.app-id = 'com.vivaldi.Vivaldi'
run = 'move-node-to-workspace 1'


# Workspace 2 - Code
# Cursor
[[on-window-detected]]
if.app-id = 'com.todesktop.230313mzl4w4u92'
run = 'move-node-to-workspace 2'


# Workspace 3 - Files and terminals
# Finder
[[on-window-detected]]
if.app-id = 'com.apple.finder'
run = 'move-node-to-workspace 3'
# Sublime Merge
[[on-window-detected]]
if.app-id = 'com.sublimemerge'
run = 'move-node-to-workspace 3'
# Docker Desktop
[[on-window-detected]]
if.app-id = 'com.electron.dockerdesktop'
run = 'move-node-to-workspace 3'
# Terminal
[[on-window-detected]]
if.app-id = 'com.apple.Terminal'
run = 'move-node-to-workspace 3'
# Ghostty 
# [[on-window-detected]]
# if.app-id = 'com.mitchellh.ghostty'
# run = 'move-node-to-workspace 3'


# Workspace 4 - Messengers work
# Teams
[[on-window-detected]]
if.app-id = 'com.microsoft.teams2'
run = 'move-node-to-workspace 4'
# Slack
[[on-window-detected]]
if.app-id = 'com.tinyspeck.slackmacgap'
run = 'move-node-to-workspace 4'
# Outlook
[[on-window-detected]]
if.app-id = 'com.microsoft.Outlook'
run = 'move-node-to-workspace 4'
[[on-window-detected]]
if.app-id = 'com.microsoft.Outlook'
if.window-title-regex-substring = 'Reminders'
run = ['layout floating']


# Workspace 5 - Personal/Messengers
# Telegram
[[on-window-detected]]
if.app-id = 'ru.keepcoder.Telegram'
run = 'move-node-to-workspace 5'
# WhatsApp
[[on-window-detected]]
if.app-id = 'net.whatsapp.WhatsApp'
run = 'move-node-to-workspace 5'
# Spotify
[[on-window-detected]]
if.app-id = 'com.spotify.client'
run = 'move-node-to-workspace 5'

# Workspace 6 - Office and Agile
# Word
[[on-window-detected]]
if.app-id = 'com.microsoft.Word'
run = 'move-node-to-workspace 6'
# Powerpoint
[[on-window-detected]]
if.app-id = 'com.microsoft.Powerpoint'
run = 'move-node-to-workspace 6'
# Excel
[[on-window-detected]]
if.app-id = 'com.microsoft.Excel'
run = 'move-node-to-workspace 6'
# Linear
[[on-window-detected]]
if.app-id = 'com.linear'
run = 'move-node-to-workspace 6'
# Notion
[[on-window-detected]]
if.app-id = 'notion.id'
run = 'move-node-to-workspace 6'



# Workspace any - Floating windows
[[on-window-detected]]
if.app-id = 'com.apple.systempreferences'
run = ['layout floating']